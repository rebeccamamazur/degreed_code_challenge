{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/date-filter.service.ts","webpack:///src/app/decade-toggle/decade-toggle.component.ts","webpack:///src/app/decade-toggle/decade-toggle.component.html","webpack:///src/app/movie-detail/movie-detail.component.ts","webpack:///src/app/movie-detail/movie-detail.component.html","webpack:///src/app/movies.service.ts","webpack:///src/app/movies/movies.component.ts","webpack:///src/app/movies/movies.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","moviesService","currentDateFilter","getMovies","subscribe","movies","totalResults","Search","sort","m1","m2","parseInt","Year","decades","reduce","accum","m","includes","slice","push","a","b","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","DateFilterService","now","Date","filterDate","next","date","asObservable","providedIn","DecadeToggleComponent","dateFilterService","subscription","getDate","setDate","MovieDetailComponent","getMovie","imdbID","getMovieDetail","movie","splitSrc","Poster","split","trimmedImgSrc","length","MoviesService","http","apiUrl","get","MoviesComponent","filteredMovies","fiterMovies","filter","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { Movie } from './movie';\nimport { MoviesService } from './movies.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  totalResults: string;\n  movies: Movie[];\n  decades: string[];\n  currentDateFilter = '';\n\n  constructor(\n    private moviesService: MoviesService) { }\n\n  ngOnInit(): void {\n    this.getMovies();\n  }\n\n  /* Moved this from MoviesComponent because the movie list information was\n   * needed in multiple locations and it didn't make sense to pass it\n   * around through Subscriptions in this specific implementation.\n   * Might not be the case if we wanted to offload fiters to the backend.\n   */\n  getMovies(): void {\n    this.moviesService.getMovies().subscribe(movies => {\n      this.totalResults = movies.totalResults;\n      this.movies = movies.Search.sort((m1, m2) => parseInt((m2.Year), 10) - parseInt((m1.Year), 10));\n      this.decades = movies.Search.reduce((accum, m) => {\n        if (!accum.includes(m.Year.slice(0, 3) + \"0\")) {\n          accum.push(m.Year.slice(0, 3) + \"0\");\n        }\n        return accum;\n      }, []).sort((a, b) => b - a);\n    });\n  }\n}\n","<div class=\"app\">\n  <app-decade-toggle\n    [decades]=\"decades\"\n    [currentDateFilter]=\"currentDateFilter\"></app-decade-toggle>\n  <app-movies\n    [movies]=\"movies\"\n    [currentDateFilter]=\"currentDateFilter\"></app-movies>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http'; /* for API calls */\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryDataService }  from './in-memory-data.service';\nimport { NgModule } from '@angular/core';\n\n/* Pulll in our components and interfaces */\nimport { AppComponent } from './app.component';\nimport { DecadeToggleComponent } from './decade-toggle/decade-toggle.component';\nimport { MoviesComponent } from './movies/movies.component';\nimport { MovieDetailComponent } from './movie-detail/movie-detail.component';\nimport { MovieSearchResponse } from './movie-search-response';\n\n// ng generate automatically imports new components to app and declares them\n@NgModule({\n  declarations: [\n    AppComponent,\n    MoviesComponent,\n    MovieDetailComponent,\n    DecadeToggleComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n  * DateFilterService\n  * Manage changes to selected filter value and emits change\n  * to subscribers\n  */\nexport class DateFilterService {\n  private now = new Date();\n  /* Subjects are observables, makes it easy to pass data between siblings */\n  private filterDate = new Subject<string>();\n\n  constructor() {\n    this.filterDate.next('');\n  }\n\n  setDate(date: string) {\n    this.filterDate.next(date);\n  }\n\n  getDate(): Observable<string> {\n    return this.filterDate.asObservable();\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DateFilterService } from '../date-filter.service';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-decade-toggle',\n  templateUrl: './decade-toggle.component.html',\n  styleUrls: ['./decade-toggle.component.scss']\n})\nexport class DecadeToggleComponent implements OnInit {\n  @Input() decades: string[];\n  @Input() currentDateFilter: string;\n  subscription: Subscription;\n\n  constructor(private dateFilterService: DateFilterService) {\n    this.subscription = this.dateFilterService\n      .getDate()\n      .subscribe(date => this.currentDateFilter = date);\n    }\n\n  ngOnInit(): void { }\n\n  /**\n    * onFilterDate\n    * Change decade on click\n    */\n  onFilterDate(date: string) {\n    this.dateFilterService.setDate(date);\n  }\n\n}\n","<div class=\"decade-toggle\">\n  <button *ngFor=\"let decade of decades\" [class.is-active]=\"currentDateFilter === decade\" (click)=\"onFilterDate(decade)\">{{ decade }}'s</button>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { MovieDetail } from '../movie-detail';\nimport { MoviesService } from '../movies.service';\nimport { DateFilterService } from '../date-filter.service';\n\n@Component({\n  selector: 'app-movie-detail',\n  templateUrl: './movie-detail.component.html',\n  styleUrls: ['./movie-detail.component.scss']\n})\nexport class MovieDetailComponent implements OnInit {\n  // Get id from parent component\n  @Input() imdbID: string;\n\n  movie: MovieDetail;\n  trimmedImgSrc: string;\n\n  constructor(private moviesService: MoviesService) { }\n\n  ngOnInit(): void {\n    this.getMovie(this.imdbID);\n  }\n\n  /**\n    * getMovie\n    * Call movie detail service to get information on current movie\n    * This is something that in a real world case I might try to work\n    * out some sort of local caching behavior to avoid API calls on\n    * ever filter click; for this limited example, it'll do.\n    */\n  getMovie(id: string): void {\n    this.moviesService.getMovieDetail(this.imdbID).subscribe(movie => {\n      this.movie = movie;\n      let splitSrc =  movie.Poster.split('/');\n      this.trimmedImgSrc = splitSrc.length < 1 ? '': 'assets/' + splitSrc[splitSrc.length - 1];\n    });\n  }\n\n}\n","<div class=\"movie\" *ngIf=\"movie\">\n  <div class=\"movie__img\">\n    <img *ngIf=\"trimmedImgSrc\" src=\"{{ trimmedImgSrc }}\" alt=\"Cover of {{ movie.Title }}\" />\n  </div>\n  <div class=\"movie__info\">\n    <h2>{{ movie.Title }}</h2>\n    <div class=\"movie__meta\">\n      <span class=\"movie__rating\">{{  movie.Rated }}</span>\n      <span class=\"movie__run\">{{  movie.Runtime }}</span>\n      <span class=\"movie__date\">{{  movie.Released }}</span>\n    </div>\n    <div class=\"movie__plot\">{{ movie.Plot }}</div>\n    <div class=\"movie__link\">\n      <a href=\"https://www.imdb.com/title/{{ imdbID }}/\" class=\"btn\">View on IMDB</a>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\n\n\nimport { MovieSearchResponse } from './movie-search-response';\nimport { MovieDetail } from './movie-detail';\nimport { MOVIES } from './mock-movies';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * MoviesService\n * Service to call for movie data from API\n */\nexport class MoviesService {\n  private apiUrl = 'http://www.omdbapi.com/?apikey=d57fdb10';\n\n  constructor(private http: HttpClient) { }\n\n  /* return an Observable here so that the calling component will wait for returned info */\n  getMovies(): Observable<MovieSearchResponse> {\n    return this.http.get<MovieSearchResponse>(`${this.apiUrl}&s=Batman`);\n  }\n\n  getMovieDetail(id: string): Observable<MovieDetail> {\n    return this.http.get<MovieDetail>(`${this.apiUrl}&i=${id}`);\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DateFilterService } from '../date-filter.service';\nimport { Movie } from '../movie';\nimport { MovieSearchResponse } from '../movie-search-response';\nimport { MoviesService } from '../movies.service';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-movies',\n  templateUrl: './movies.component.html',\n  styleUrls: ['./movies.component.scss']\n})\n\n/**\n * MoviesComponent\n * Manages the movie listing\n */\nexport class MoviesComponent implements OnInit {\n  @Input() movies: Movie[];\n  @Input() currentDateFilter: string;\n  totalResults: string;\n  decades: string[];\n  filteredMovies: Movie[];\n  subscription: Subscription;\n\n  constructor(\n    private moviesService: MoviesService,\n    private dateFilterService: DateFilterService) {\n      /* listen for changes on the dateFilterService */\n      this.subscription = this.dateFilterService\n        .getDate()\n        .subscribe(date => {\n          this.currentDateFilter = date;\n          /* This doesn't feel like the right spot to do this... need to figure out why ngOnChanges isn't triggering */\n          this.filteredMovies = this.fiterMovies();\n        });\n      }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(): void {\n    this.filteredMovies = this.fiterMovies()\n  }\n\n  /**\n    * fiterMovies\n    * utility function to trim list of movies by decade or reset\n    * to full list as appropriate\n    */\n  fiterMovies(): Movie[] {\n    if (!this.currentDateFilter) {\n      return this.movies;\n    }\n    return this.movies.filter((m) => {\n      return m.Year.slice(0, 3) == this.currentDateFilter.slice(0, 3);\n    });\n  }\n}\n","<div class=\"movies\">\n  <app-movie-detail *ngFor=\"let movie of filteredMovies\" [imdbID]=\"movie.imdbID\"></app-movie-detail>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}