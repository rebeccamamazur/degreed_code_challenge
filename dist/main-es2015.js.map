{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/date-filter.service.ts","./src/app/decade-toggle/decade-toggle.component.ts","./src/app/decade-toggle/decade-toggle.component.html","./src/app/movie-detail/movie-detail.component.ts","./src/app/movie-detail/movie-detail.component.html","./src/app/movies.service.ts","./src/app/movies/movies.component.ts","./src/app/movies/movies.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { Movie } from './movie';\nimport { MoviesService } from './movies.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  totalResults: string;\n  movies: Movie[];\n  decades: string[];\n  currentDateFilter = '';\n\n  constructor(\n    private moviesService: MoviesService) { }\n\n  ngOnInit(): void {\n    this.getMovies();\n  }\n\n  /* Moved this from MoviesComponent because the movie list information was\n   * needed in multiple locations and it didn't make sense to pass it\n   * around through Subscriptions in this specific implementation.\n   * Might not be the case if we wanted to offload fiters to the backend.\n   */\n  getMovies(): void {\n    this.moviesService.getMovies().subscribe(movies => {\n      this.totalResults = movies.totalResults;\n      this.movies = movies.Search.sort((m1, m2) => parseInt((m2.Year), 10) - parseInt((m1.Year), 10));\n      this.decades = movies.Search.reduce((accum, m) => {\n        if (!accum.includes(m.Year.slice(0, 3) + \"0\")) {\n          accum.push(m.Year.slice(0, 3) + \"0\");\n        }\n        return accum;\n      }, []).sort((a, b) => b - a);\n    });\n  }\n}\n","<div class=\"app\">\n  <app-decade-toggle\n    [decades]=\"decades\"\n    [currentDateFilter]=\"currentDateFilter\"></app-decade-toggle>\n  <app-movies\n    [movies]=\"movies\"\n    [currentDateFilter]=\"currentDateFilter\"></app-movies>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http'; /* for API calls */\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryDataService }  from './in-memory-data.service';\nimport { NgModule } from '@angular/core';\n\n/* Pulll in our components and interfaces */\nimport { AppComponent } from './app.component';\nimport { DecadeToggleComponent } from './decade-toggle/decade-toggle.component';\nimport { MoviesComponent } from './movies/movies.component';\nimport { MovieDetailComponent } from './movie-detail/movie-detail.component';\nimport { MovieSearchResponse } from './movie-search-response';\n\n// ng generate automatically imports new components to app and declares them\n@NgModule({\n  declarations: [\n    AppComponent,\n    MoviesComponent,\n    MovieDetailComponent,\n    DecadeToggleComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n  * DateFilterService\n  * Manage changes to selected filter value and emits change\n  * to subscribers\n  */\nexport class DateFilterService {\n  private now = new Date();\n  /* Subjects are observables, makes it easy to pass data between siblings */\n  private filterDate = new Subject<string>();\n\n  constructor() {\n    this.filterDate.next('');\n  }\n\n  setDate(date: string) {\n    this.filterDate.next(date);\n  }\n\n  getDate(): Observable<string> {\n    return this.filterDate.asObservable();\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DateFilterService } from '../date-filter.service';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-decade-toggle',\n  templateUrl: './decade-toggle.component.html',\n  styleUrls: ['./decade-toggle.component.scss']\n})\nexport class DecadeToggleComponent implements OnInit {\n  @Input() decades: string[];\n  @Input() currentDateFilter: string;\n  subscription: Subscription;\n\n  constructor(private dateFilterService: DateFilterService) {\n    this.subscription = this.dateFilterService\n      .getDate()\n      .subscribe(date => this.currentDateFilter = date);\n    }\n\n  ngOnInit(): void { }\n\n  /**\n    * onFilterDate\n    * Change decade on click\n    */\n  onFilterDate(date: string) {\n    this.dateFilterService.setDate(date);\n  }\n\n}\n","<div class=\"decade-toggle\">\n  <button *ngFor=\"let decade of decades\" [class.is-active]=\"currentDateFilter === decade\" (click)=\"onFilterDate(decade)\">{{ decade }}'s</button>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { MovieDetail } from '../movie-detail';\nimport { MoviesService } from '../movies.service';\nimport { DateFilterService } from '../date-filter.service';\n\n@Component({\n  selector: 'app-movie-detail',\n  templateUrl: './movie-detail.component.html',\n  styleUrls: ['./movie-detail.component.scss']\n})\nexport class MovieDetailComponent implements OnInit {\n  // Get id from parent component\n  @Input() imdbID: string;\n\n  movie: MovieDetail;\n  trimmedImgSrc: string;\n\n  constructor(private moviesService: MoviesService) { }\n\n  ngOnInit(): void {\n    this.getMovie(this.imdbID);\n  }\n\n  /**\n    * getMovie\n    * Call movie detail service to get information on current movie\n    * This is something that in a real world case I might try to work\n    * out some sort of local caching behavior to avoid API calls on\n    * ever filter click; for this limited example, it'll do.\n    */\n  getMovie(id: string): void {\n    this.moviesService.getMovieDetail(this.imdbID).subscribe(movie => {\n      this.movie = movie;\n      let splitSrc =  movie.Poster.split('/');\n      this.trimmedImgSrc = splitSrc.length < 1 ? '': 'assets/' + splitSrc[splitSrc.length - 1];\n    });\n  }\n\n}\n","<div class=\"movie\" *ngIf=\"movie\">\n  <div class=\"movie__img\">\n    <img *ngIf=\"trimmedImgSrc\" src=\"{{ trimmedImgSrc }}\" alt=\"Cover of {{ movie.Title }}\" />\n  </div>\n  <div class=\"movie__info\">\n    <h2>{{ movie.Title }}</h2>\n    <div class=\"movie__meta\">\n      <span class=\"movie__rating\">{{  movie.Rated }}</span>\n      <span class=\"movie__run\">{{  movie.Runtime }}</span>\n      <span class=\"movie__date\">{{  movie.Released }}</span>\n    </div>\n    <div class=\"movie__plot\">{{ movie.Plot }}</div>\n    <div class=\"movie__link\">\n      <a href=\"https://www.imdb.com/title/{{ imdbID }}/\" class=\"btn\">View on IMDB</a>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\n\n\nimport { MovieSearchResponse } from './movie-search-response';\nimport { MovieDetail } from './movie-detail';\nimport { MOVIES } from './mock-movies';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * MoviesService\n * Service to call for movie data from API\n */\nexport class MoviesService {\n  private apiUrl = 'http://www.omdbapi.com/?apikey=d57fdb10';\n\n  constructor(private http: HttpClient) { }\n\n  /* return an Observable here so that the calling component will wait for returned info */\n  getMovies(): Observable<MovieSearchResponse> {\n    return this.http.get<MovieSearchResponse>(`${this.apiUrl}&s=Batman`);\n  }\n\n  getMovieDetail(id: string): Observable<MovieDetail> {\n    return this.http.get<MovieDetail>(`${this.apiUrl}&i=${id}`);\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DateFilterService } from '../date-filter.service';\nimport { Movie } from '../movie';\nimport { MovieSearchResponse } from '../movie-search-response';\nimport { MoviesService } from '../movies.service';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-movies',\n  templateUrl: './movies.component.html',\n  styleUrls: ['./movies.component.scss']\n})\n\n/**\n * MoviesComponent\n * Manages the movie listing\n */\nexport class MoviesComponent implements OnInit {\n  @Input() movies: Movie[];\n  @Input() currentDateFilter: string;\n  totalResults: string;\n  decades: string[];\n  filteredMovies: Movie[];\n  subscription: Subscription;\n\n  constructor(\n    private moviesService: MoviesService,\n    private dateFilterService: DateFilterService) {\n      /* listen for changes on the dateFilterService */\n      this.subscription = this.dateFilterService\n        .getDate()\n        .subscribe(date => {\n          this.currentDateFilter = date;\n          /* This doesn't feel like the right spot to do this... need to figure out why ngOnChanges isn't triggering */\n          this.filteredMovies = this.fiterMovies();\n        });\n      }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(): void {\n    this.filteredMovies = this.fiterMovies()\n  }\n\n  /**\n    * fiterMovies\n    * utility function to trim list of movies by decade or reset\n    * to full list as appropriate\n    */\n  fiterMovies(): Movie[] {\n    if (!this.currentDateFilter) {\n      return this.movies;\n    }\n    return this.movies.filter((m) => {\n      return m.Year.slice(0, 3) == this.currentDateFilter.slice(0, 3);\n    });\n  }\n}\n","<div class=\"movies\">\n  <app-movie-detail *ngFor=\"let movie of filteredMovies\" [imdbID]=\"movie.imdbID\"></app-movie-detail>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}